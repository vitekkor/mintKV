syntax = "proto3";

package com.mint.db;

import "external/database_service.proto";

enum Operation {
  UNDEFINED = 0;
  GET = 1;
  PUT = 2;
  DELETE = 3;
}

message LogEntry {
  int64 term = 1;
  int64 index = 2;

  bytes key = 3;
  bytes value = 4;
  Operation operation = 5;
}

message VoteRequest {
  int64 term = 1;
  int32 candidateId = 2;
  int64 lastLogIndex = 3;
  int64 lastLogTerm = 4;
}

message VoteResponse {
  int64 term = 1;
  bool voteGranted = 2;
}

message AppendEntriesRequest {
  int64 term = 1;
  int32 leaderId = 2;
  int64 prevLogIndex = 3;
  int64 prevLogTerm = 4;
  repeated LogEntry entries = 5;
  int64 leaderCommit = 6;
}

message AppendEntriesResponse {
  int64 term = 1;
  /** If success, then `entry.id.index ?: prevLogId.id.index`; `-1` when not successful. **/
  int64 lastIndex = 2;
}

message ClientCommandRequestRPC {
  int32 processId = 1;
  bytes key = 2;
  bytes value = 3;
  Operation operation = 4;
  ReadMode readMode = 5;
  bool uncommitted = 6;
}

message ClientCommandResponseRPC {
  int64 term = 1;
  bytes key = 2;
  bytes value = 3;
}

service RaftService {
  rpc RequestVote(VoteRequest) returns (VoteResponse) {}
  rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse) {}
  rpc ClientCommand(ClientCommandRequestRPC) returns (ClientCommandResponseRPC) {}
}
